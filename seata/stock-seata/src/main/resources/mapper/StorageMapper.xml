<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.over.stock.mapper.StorageMapper">
    <!-- 结果集 -->
    <resultMap type="com.over.stock.entity.Storage" id="StorageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="total" column="total" jdbcType="INTEGER"/>
        <result property="used" column="used" jdbcType="INTEGER"/>
        <result property="residue" column="residue" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基本字段 -->
    <sql id="Base_Column_List">
        id, product_id, total, used, residue
    </sql>

    <!-- 查询单个 -->
    <select id="selectById" resultMap="StorageMap">
        select
        <include refid="Base_Column_List"/>
        from storage
        where id = #{id}
    </select>

    <!-- 分页查询 -->
    <select id="selectPage" resultMap="StorageMap">
        select
        <include refid="Base_Column_List"/>
        from storage
        limit #{start},#{limit}
    </select>

    <!-- 查询全部 -->
    <select id="selectAll" resultMap="StorageMap">
        select
        <include refid="Base_Column_List"/>
        from storage
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="selectList" resultMap="StorageMap">
        select
        <include refid="Base_Column_List"/>
        from storage
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="total != null">
                and total = #{total}
            </if>
            <if test="used != null">
                and used = #{used}
            </if>
            <if test="residue != null">
                and residue = #{residue}
            </if>
        </where>
    </select>

    <!-- 新增所有列 -->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into `storage` (id, product_id, total, used, residue)
        values ( #{id}, #{productId}, #{total}, #{used}, #{residue})
    </insert>

    <!-- 批量新增 -->
    <insert id="batchInsert">
        insert into storage(id, product_id, total, used, residue)
        values
        <foreach collection="storages" item="item" index="index" separator=",">
            (
            #{item.id}, #{item.productId}, #{item.total}, #{item.used}, #{item.residue} )
        </foreach>
    </insert>

    <!-- 通过主键修改数据 -->
    <update id="update">
        update seat-storage.storage
        <set>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="total != null">
                total = #{total},
            </if>
            <if test="used != null">
                used = #{used},
            </if>
            <if test="residue != null">
                residue = #{residue},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from storage where id = #{id}
    </delete>

    <!-- 总数 -->
    <select id="count" resultType="int">
        select count(*) from storage
    </select>
</mapper>